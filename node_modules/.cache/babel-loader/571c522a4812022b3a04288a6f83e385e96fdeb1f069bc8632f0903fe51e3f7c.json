{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user7\\\\WebstormProjects\\\\01-yover-craft-app\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const [folderName, setFolderName] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [fileList, setFileList] = useState([]);\n  const [folders, setFolders] = useState([]); // Для списка существующих папок\n  const [isFolderExists, setIsFolderExists] = useState(false);\n  const [isCreatingFolder, setIsCreatingFolder] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      const response = await fetch('http://26.105.9.189:5000/folders');\n      if (response.ok) {\n        const data = await response.json();\n        setFolders(data.folders);\n      } else {\n        setResponseMessage('Ошибка при загрузке папок.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFiles(event.target.files);\n  };\n  const handleFolderChange = event => {\n    setFolderName(event.target.value);\n    fetchFileList(event.target.value); // После выбора папки загружаем её содержимое\n  };\n  const fetchFileList = async folderName => {\n    try {\n      const response = await fetch(`http://26.105.9.189:5000/files/${folderName}`);\n      if (response.ok) {\n        const data = await response.json();\n        setFileList(data.files);\n        setIsFolderExists(true);\n      } else {\n        setIsFolderExists(false);\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFiles || !folderName) {\n      setResponseMessage('Пожалуйста, выберите папку и файлы для загрузки.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('folderName', folderName);\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch('http://26.105.9.189:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResponseMessage(data.message);\n        fetchFileList(folderName); // Обновляем список файлов\n      } else {\n        setResponseMessage('Ошибка при загрузке файлов.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  const deleteFile = async fileName => {\n    try {\n      const response = await fetch(`http://26.105.9.189:5000/files/${folderName}/${fileName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResponseMessage(data.message);\n        fetchFileList(folderName); // Обновляем список файлов\n      } else {\n        setResponseMessage('Ошибка при удалении файла.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  const downloadFile = fileName => {\n    const link = document.createElement('a');\n    link.href = `http://26.105.9.189:5000/files/${folderName}/download/${fileName}`;\n    link.download = fileName;\n    link.click();\n  };\n  const handleCreateFolder = async () => {\n    try {\n      const response = await fetch('http://26.105.9.189:5000/folders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          folderName: newFolderName\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResponseMessage(data.message);\n        fetchFolders(); // Обновляем список папок\n        setIsCreatingFolder(false); // Закрываем форму для создания папки\n      } else {\n        const data = await response.json();\n        setResponseMessage(data.message);\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"folderName\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0443:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"folderName\",\n        value: folderName,\n        onChange: handleFolderChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder,\n          children: folder\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCreatingFolder(true),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), isCreatingFolder && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u0430\\u043F\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCreatingFolder(false),\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }, this), isFolderExists !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0424\\u0430\\u0439\\u043B\\u044B \\u0432 \\u043F\\u0430\\u043F\\u043A\\u0435 \\\"\", folderName, \"\\\":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), isFolderExists ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileList.length > 0 ? fileList.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => downloadFile(file),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteFile(file),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 41\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432 \\u0432 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u0430\\u043F\\u043A\\u0435.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u0430\\u043F\\u043A\\u0438 \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C \\u0438\\u043C\\u0435\\u043D\\u0435\\u043C \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442. \\u041E\\u043D\\u0430 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"TnabKk6Se36M4+x3MBTSJFMvBoM=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FileUpload","_s","selectedFiles","setSelectedFiles","folderName","setFolderName","responseMessage","setResponseMessage","fileList","setFileList","folders","setFolders","isFolderExists","setIsFolderExists","isCreatingFolder","setIsCreatingFolder","newFolderName","setNewFolderName","fetchFolders","response","fetch","ok","data","json","error","console","handleFileChange","event","target","files","handleFolderChange","value","fetchFileList","handleSubmit","preventDefault","formData","FormData","append","i","length","method","body","message","deleteFile","fileName","downloadFile","link","document","createElement","href","download","click","handleCreateFolder","headers","JSON","stringify","children","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","folder","index","onClick","type","e","placeholder","file","style","marginLeft","onSubmit","multiple","_c","$RefreshReg$"],"sources":["C:/Users/user7/WebstormProjects/01-yover-craft-app/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FileUpload() {\n    const [selectedFiles, setSelectedFiles] = useState(null);\n    const [folderName, setFolderName] = useState('');\n    const [responseMessage, setResponseMessage] = useState('');\n    const [fileList, setFileList] = useState([]);\n    const [folders, setFolders] = useState([]); // Для списка существующих папок\n    const [isFolderExists, setIsFolderExists] = useState(false);\n    const [isCreatingFolder, setIsCreatingFolder] = useState(false);\n    const [newFolderName, setNewFolderName] = useState('');\n\n    useEffect(() => {\n        fetchFolders();\n    }, []);\n\n    const fetchFolders = async () => {\n        try {\n            const response = await fetch('http://26.105.9.189:5000/folders');\n            if (response.ok) {\n                const data = await response.json();\n                setFolders(data.folders);\n            } else {\n                setResponseMessage('Ошибка при загрузке папок.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    const handleFileChange = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n    const handleFolderChange = (event) => {\n        setFolderName(event.target.value);\n        fetchFileList(event.target.value); // После выбора папки загружаем её содержимое\n    };\n\n    const fetchFileList = async (folderName) => {\n        try {\n            const response = await fetch(`http://26.105.9.189:5000/files/${folderName}`);\n            if (response.ok) {\n                const data = await response.json();\n                setFileList(data.files);\n                setIsFolderExists(true);\n            } else {\n                setIsFolderExists(false);\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!selectedFiles || !folderName) {\n            setResponseMessage('Пожалуйста, выберите папку и файлы для загрузки.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('folderName', folderName);\n\n        for (let i = 0; i < selectedFiles.length; i++) {\n            formData.append('files', selectedFiles[i]);\n        }\n\n        try {\n            const response = await fetch('http://26.105.9.189:5000/upload', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setResponseMessage(data.message);\n                fetchFileList(folderName); // Обновляем список файлов\n            } else {\n                setResponseMessage('Ошибка при загрузке файлов.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    const deleteFile = async (fileName) => {\n        try {\n            const response = await fetch(`http://26.105.9.189:5000/files/${folderName}/${fileName}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setResponseMessage(data.message);\n                fetchFileList(folderName); // Обновляем список файлов\n            } else {\n                setResponseMessage('Ошибка при удалении файла.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    const downloadFile = (fileName) => {\n        const link = document.createElement('a');\n        link.href = `http://26.105.9.189:5000/files/${folderName}/download/${fileName}`;\n        link.download = fileName;\n        link.click();\n    };\n\n    const handleCreateFolder = async () => {\n        try {\n            const response = await fetch('http://26.105.9.189:5000/folders', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ folderName: newFolderName }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setResponseMessage(data.message);\n                fetchFolders(); // Обновляем список папок\n                setIsCreatingFolder(false); // Закрываем форму для создания папки\n            } else {\n                const data = await response.json();\n                setResponseMessage(data.message);\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Загрузка файлов</h1>\n\n            {/* Выбор папки */}\n            <div>\n                <label htmlFor=\"folderName\">Выберите папку:</label>\n                <select id=\"folderName\" value={folderName} onChange={handleFolderChange}>\n                    <option value=\"\">Выберите папку</option>\n                    {folders.map((folder, index) => (\n                        <option key={index} value={folder}>\n                            {folder}\n                        </option>\n                    ))}\n                </select>\n                <button onClick={() => setIsCreatingFolder(true)}>Создать новую папку</button>\n            </div>\n\n            {/* Форма для создания новой папки */}\n            {isCreatingFolder && (\n                <div>\n                    <h3>Создать новую папку</h3>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"Введите имя папки\"\n                    />\n                    <button onClick={handleCreateFolder}>Создать</button>\n                    <button onClick={() => setIsCreatingFolder(false)}>Отмена</button>\n                </div>\n            )}\n\n            {/* Вывод сообщения */}\n            {responseMessage && <p>{responseMessage}</p>}\n\n            {/* Если папка существует, показываем файлы и форму загрузки */}\n            {isFolderExists !== null && (\n                <div>\n                    <h2>Файлы в папке \"{folderName}\":</h2>\n                    {isFolderExists ? (\n                        <ul>\n                            {fileList.length > 0 ? (\n                                fileList.map((file, index) => (\n                                    <li key={index}>\n                                        {file}\n                                        <button onClick={() => downloadFile(file)} style={{ marginLeft: '10px' }}>\n                                            Скачать\n                                        </button>\n                                        <button onClick={() => deleteFile(file)} style={{ marginLeft: '10px' }}>\n                                            Удалить\n                                        </button>\n                                    </li>\n                                ))\n                            ) : (\n                                <li>Нет файлов в этой папке.</li>\n                            )}\n                        </ul>\n                    ) : (\n                        <p>Папки с таким именем не существует. Она будет создана при загрузке файлов.</p>\n                    )}\n\n                    <form onSubmit={handleSubmit}>\n                        <div>\n                            <input type=\"file\" multiple onChange={handleFileChange} />\n                        </div>\n                        <div>\n                            <button type=\"submit\">Загрузить файлы</button>\n                        </div>\n                    </form>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}