{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user7\\\\WebstormProjects\\\\01-yover-craft-app\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const [folderName, setFolderName] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [fileList, setFileList] = useState([]); // Для списка файлов\n\n  const handleFileChange = event => {\n    setSelectedFiles(event.target.files);\n  };\n  const handleFolderChange = event => {\n    setFolderName(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFiles || !folderName) {\n      setResponseMessage('Пожалуйста, укажите имя папки и выберите файлы для загрузки.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('folderName', folderName);\n\n    // Добавляем файлы в форму\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch('http://26.105.9.189:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResponseMessage(data.message);\n        fetchFileList(folderName); // После загрузки файлов запрашиваем список\n      } else {\n        setResponseMessage('Ошибка при загрузке файлов.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n\n  // Функция для получения списка файлов\n  const fetchFileList = async folderName => {\n    try {\n      const response = await fetch(`http://26.105.9.189:5000/files/${folderName}`);\n      if (response.ok) {\n        const data = await response.json();\n        setFileList(data.files);\n      } else {\n        setResponseMessage('Ошибка при получении списка файлов.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n\n  // Функция для удаления файла\n  const deleteFile = async fileName => {\n    try {\n      const response = await fetch(`http://26.105.9.189:5000/files/${folderName}/${fileName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResponseMessage(data.message);\n        fetchFileList(folderName); // После удаления файла обновляем список\n      } else {\n        setResponseMessage('Ошибка при удалении файла.');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      setResponseMessage('Ошибка при соединении с сервером.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"folderName\",\n          children: \"\\u0418\\u043C\\u044F \\u043F\\u0430\\u043F\\u043A\\u0438:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"folderName\",\n          value: folderName,\n          onChange: handleFolderChange,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u0430\\u043F\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }, this), fileList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0424\\u0430\\u0439\\u043B\\u044B \\u0432 \\u043F\\u0430\\u043F\\u043A\\u0435 \\\"\", folderName, \"\\\":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileList.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteFile(file),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"+E0b7X7RlQzDJtLBc1S0q7nRcAU=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FileUpload","_s","selectedFiles","setSelectedFiles","folderName","setFolderName","responseMessage","setResponseMessage","fileList","setFileList","handleFileChange","event","target","files","handleFolderChange","value","handleSubmit","preventDefault","formData","FormData","append","i","length","response","fetch","method","body","ok","data","json","message","fetchFileList","error","console","deleteFile","fileName","children","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","multiple","map","file","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user7/WebstormProjects/01-yover-craft-app/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FileUpload() {\n    const [selectedFiles, setSelectedFiles] = useState(null);\n    const [folderName, setFolderName] = useState('');\n    const [responseMessage, setResponseMessage] = useState('');\n    const [fileList, setFileList] = useState([]); // Для списка файлов\n\n    const handleFileChange = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n    const handleFolderChange = (event) => {\n        setFolderName(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!selectedFiles || !folderName) {\n            setResponseMessage('Пожалуйста, укажите имя папки и выберите файлы для загрузки.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('folderName', folderName);\n\n        // Добавляем файлы в форму\n        for (let i = 0; i < selectedFiles.length; i++) {\n            formData.append('files', selectedFiles[i]);\n        }\n\n        try {\n            const response = await fetch('http://26.105.9.189:5000/upload', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setResponseMessage(data.message);\n                fetchFileList(folderName); // После загрузки файлов запрашиваем список\n            } else {\n                setResponseMessage('Ошибка при загрузке файлов.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    // Функция для получения списка файлов\n    const fetchFileList = async (folderName) => {\n        try {\n            const response = await fetch(`http://26.105.9.189:5000/files/${folderName}`);\n            if (response.ok) {\n                const data = await response.json();\n                setFileList(data.files);\n            } else {\n                setResponseMessage('Ошибка при получении списка файлов.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    // Функция для удаления файла\n    const deleteFile = async (fileName) => {\n        try {\n            const response = await fetch(`http://26.105.9.189:5000/files/${folderName}/${fileName}`, {\n                method: 'DELETE'\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setResponseMessage(data.message);\n                fetchFileList(folderName); // После удаления файла обновляем список\n            } else {\n                setResponseMessage('Ошибка при удалении файла.');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setResponseMessage('Ошибка при соединении с сервером.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Загрузка файлов</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"folderName\">Имя папки:</label>\n                    <input\n                        type=\"text\"\n                        id=\"folderName\"\n                        value={folderName}\n                        onChange={handleFolderChange}\n                        placeholder=\"Введите имя папки\"\n                    />\n                </div>\n\n                <div>\n                    <input type=\"file\" multiple onChange={handleFileChange} />\n                </div>\n\n                <div>\n                    <button type=\"submit\">Загрузить файлы</button>\n                </div>\n            </form>\n\n            {responseMessage && <p>{responseMessage}</p>}\n\n            {/* Список файлов */}\n            {fileList.length > 0 && (\n                <div>\n                    <h2>Файлы в папке \"{folderName}\":</h2>\n                    <ul>\n                        {fileList.map((file, index) => (\n                            <li key={index}>\n                                {file}\n                                <button onClick={() => deleteFile(file)}>Удалить</button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}